name: "Deploy"
on: ["deployment"]

jobs:
  check:
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v1
      - name: "Continuous integration checks"
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - run: |
          rm -rf node_modules && yarn install --frozen-lockfile
          yarn run build --if-present
          yarn test --passWithNoTests

  deployment:
    needs: check
    environment: ${{ github.event.deployment.environment }}
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v1"

      - name: "Deployment pending"
        uses: "deliverybot/deployment-status@master"
        with:
          state: "pending"
          token: "${{ github.token }}"

      - name: "Set up ssh keys"
        run: |
          mkdir ~/.ssh
          touch ~/.ssh/known_hosts
          ssh-keyscan -p 6450 -H sftp.l3alr0g.fr >> ~/.ssh/known_hosts

      - name: "Cache lftp"
        uses: actions/cache@v2
        id: cache-lftp
        with:
          path: "~/lftp"
          key: ${{ secrets.LFTP_VERSION }}

      - name: "Set up lftp"
        env:
          CACHE_HIT: ${{ steps.cache-lftp.outputs.cache_hit }}
          LFTP_VERSION: ${{ secrets.LFTP_VERSION }}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp -v -f -r ~/lftp/* /
          else
            sudo apt-get update
            sudo apt-get install -y lftp="$LFTP_VERSION"
            mkdir -p ~/lftp
            sudo dpkg -L lftp | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/lftp/
          fi

      - uses: actions/checkout@v1
      - name: "Build page"
        run: |
          rm -rf node_modules && yarn install --frozen-lockfile
          yarn run build --if-present

      - uses: actions/checkout@v1
      - name: "Deploy ${{ github.event.deployment.environment }}"
        env:
          PORT: ${{ secrets.REMOTE_PORT }}
          USER: ${{ secrets.REMOTE_USER }}
          PASSWORD: ${{ secrets.REMOTE_PSWD }}
          HOST: ${{ secrets.REMOTE_HOST }}
          TARGETDIR: ${{ secrets.REMOTE_TARGET }}
        run: |
          echo "task - ${{ github.event.deployment.task }}"
          echo "environment - ${{ github.event.deployment.environment }}"
          echo "payload - ${{ github.event.deployment.payload }}"
          lftp -p ${{ env.PORT }} sftp://${{ env.USER }}:${{ env.PASSWORD }}@${{ env.HOST }} -e 'mirror -v -R --delete --exclude .git/ --exclude .gitignore --exclude .gitattributes --exclude .github/ --exclude README.md ./build/ ${{ secrets.REMOTE_TARGET }}; bye'

      - name: "Deployment success"
        if: success()
        uses: "deliverybot/deployment-status@master"
        with:
          state: "success"
          environment-url: ${{ secrets.ENV_URL }}
          token: "${{ github.token }}"

      - name: "Deployment failure"
        if: failure()
        uses: "deliverybot/deployment-status@master"
        with:
          state: "failure"
          token: "${{ github.token }}"
